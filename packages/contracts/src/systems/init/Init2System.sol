// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;
import { System } from "@latticexyz/world/src/System.sol";
import { Recipe } from "../../codegen/index.sol";
import { LibUtils } from "../../libraries/Libraries.sol";
import { MACHINE_TYPE, MATERIAL_TYPE } from "../../codegen/common.sol";

contract Init2System is System {
  function init2() public {
    // Cooler recipes
    Recipe.set(MACHINE_TYPE.COOLER, uint256(MATERIAL_TYPE.MONSTER), MATERIAL_TYPE.BUG);
    Recipe.set(MACHINE_TYPE.COOLER, uint256(MATERIAL_TYPE.BLOOD_LIPIDS), MATERIAL_TYPE.BLOOD);
    Recipe.set(MACHINE_TYPE.COOLER, uint256(MATERIAL_TYPE.M150), MATERIAL_TYPE.PRIME);
    Recipe.set(MACHINE_TYPE.COOLER, uint256(MATERIAL_TYPE.PRIME), MATERIAL_TYPE.DIET_RED_BULL);
    Recipe.set(MACHINE_TYPE.COOLER, uint256(MATERIAL_TYPE.CAFFEINE_SLUSHY), MATERIAL_TYPE.CLUB_MATE);
    Recipe.set(MACHINE_TYPE.COOLER, uint256(MATERIAL_TYPE.DIET_RED_BULL), MATERIAL_TYPE.CLUB_MATE);

    // Wetter recipes
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.BUG), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.DIRT), MATERIAL_TYPE.PLANT);
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.BLOOD_LIPIDS), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.M150), MATERIAL_TYPE.PRIME);
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.PLANT), MATERIAL_TYPE.CLUB_MATE);
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.E_LIQUID), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.TOBACCO), MATERIAL_TYPE.CIGARETTE_JUICE);
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.CIGARETTE_JUICE), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.ERASERBABY), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.WETTER, uint256(MATERIAL_TYPE.FIVE_HOUR_ENERGY), MATERIAL_TYPE.SLUDGE);

    // Dryer recipes
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.MONSTER), MATERIAL_TYPE.DIRT);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.PISS), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.FIVE_HOUR_ENERGY), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.CAFFEINE_SLUSHY), MATERIAL_TYPE.DIRT);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.CLUB_MATE), MATERIAL_TYPE.DIRT);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.BLOOD_LIPIDS), MATERIAL_TYPE.DIRT);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.SLUDGE), MATERIAL_TYPE.DIRT);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.PLANT), MATERIAL_TYPE.TOBACCO);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.E_LIQUID), MATERIAL_TYPE.TOBACCO);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.CIGARETTE_JUICE), MATERIAL_TYPE.TOBACCO);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.DIET_RED_BULL), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.ERASERBABY), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.DRYER, uint256(MATERIAL_TYPE.PRIME), MATERIAL_TYPE.SLUDGE);

    // Boiler recipes
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.BUG), MATERIAL_TYPE.MONSTER);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.PISS), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.BLOOD), MATERIAL_TYPE.BLOOD_LIPIDS);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.DIRT), MATERIAL_TYPE.BLOOD_LIPIDS);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.BLOOD_LIPIDS), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.CAFFEINE_SLUSHY), MATERIAL_TYPE.PRIME);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.PLANT), MATERIAL_TYPE.CLUB_MATE);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.CLUB_MATE), MATERIAL_TYPE.DIET_RED_BULL);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.PRIME), MATERIAL_TYPE.M150);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.FIVE_HOUR_ENERGY), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.DIET_RED_BULL), MATERIAL_TYPE.PRIME);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.TOBACCO), MATERIAL_TYPE.CIGARETTE_JUICE);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.CIGARETTE_JUICE), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.ERASERBABY), MATERIAL_TYPE.SLUDGE);
    Recipe.set(MACHINE_TYPE.BOILER, uint256(MATERIAL_TYPE.E_LIQUID), MATERIAL_TYPE.SLUDGE);

    // Mixer recipes

    // BLOOD + PISS => CAFFEINE_SLUSHY
    Recipe.set(
      MACHINE_TYPE.MIXER,
      LibUtils.getUniqueIdentifier(uint8(MATERIAL_TYPE.BLOOD), uint8(MATERIAL_TYPE.PISS)),
      MATERIAL_TYPE.CAFFEINE_SLUSHY
    );

    // PISS + MONSTER => M150
    Recipe.set(
      MACHINE_TYPE.MIXER,
      LibUtils.getUniqueIdentifier(uint8(MATERIAL_TYPE.PISS), uint8(MATERIAL_TYPE.MONSTER)),
      MATERIAL_TYPE.M150
    );

    // PISS + M150 => FIVE_HOUR_ENERGY
    Recipe.set(
      MACHINE_TYPE.MIXER,
      LibUtils.getUniqueIdentifier(uint8(MATERIAL_TYPE.PISS), uint8(MATERIAL_TYPE.M150)),
      MATERIAL_TYPE.FIVE_HOUR_ENERGY
    );

    // PRIME + M150 => FIVE_HOUR_ENERGY
    Recipe.set(
      MACHINE_TYPE.MIXER,
      LibUtils.getUniqueIdentifier(uint8(MATERIAL_TYPE.PRIME), uint8(MATERIAL_TYPE.M150)),
      MATERIAL_TYPE.FIVE_HOUR_ENERGY
    );

    // BLOOD_LIPIDS + CIGARETTE_JUICE => E_LIQUID
    Recipe.set(
      MACHINE_TYPE.MIXER,
      LibUtils.getUniqueIdentifier(uint8(MATERIAL_TYPE.BLOOD_LIPIDS), uint8(MATERIAL_TYPE.CIGARETTE_JUICE)),
      MATERIAL_TYPE.E_LIQUID
    );

    // DIET_RED_BULL + CIGARETTE_JUICE => E_LIQUID
    Recipe.set(
      MACHINE_TYPE.MIXER,
      LibUtils.getUniqueIdentifier(uint8(MATERIAL_TYPE.DIET_RED_BULL), uint8(MATERIAL_TYPE.CIGARETTE_JUICE)),
      MATERIAL_TYPE.E_LIQUID
    );

    // FIVE_HOUR_ENERGY + E_LIQUID => ERASERBABY
    Recipe.set(
      MACHINE_TYPE.MIXER,
      LibUtils.getUniqueIdentifier(uint8(MATERIAL_TYPE.FIVE_HOUR_ENERGY), uint8(MATERIAL_TYPE.E_LIQUID)),
      MATERIAL_TYPE.ERASERBABY
    );
  }
}
